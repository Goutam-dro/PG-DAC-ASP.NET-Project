@* @using Microsoft.AspNetCore.Identity
@model IEnumerable<IdentityRole>

@{
    ViewData["Title"] = "Application Roles";
}

<h1>View Roles</h1>
<p>
    <a asp-action="Create">Create Role</a>
</p>

<table class="table">
<thead>
<tr>
    <th>@Html.DisplayNameFor(model => model.Id)</th>

    <th>@Html.DisplayNameFor(model => model.Name)</th>

    <th></th>
</tr>
</thead>
<tbody>
@foreach (var item in Model)
{
    <tr>
        <td>@Html.DisplayFor(modelItem=>item.Id)</td>
        <td>@Html.DisplayFor(modelItem => item.Name)</td>
    </tr>
}
</tbody>
<table/> *@



@using Microsoft.AspNetCore.Identity
@model IEnumerable<IdentityRole>

@{
    ViewData["Title"] = "Application Roles";
}

<h1>View Roles</h1>
<p>
    <a asp-action="Create">Create Role</a>
</p>

<table class="table">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.Id)</th>
        <th>@Html.DisplayNameFor(model => model.Name)</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @if (Model != null && Model.Any())
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(item.Id))
                    {
                        @Html.DisplayFor(modelItem => item.Id)
                    }
                    else
                    {
                        @:Not Available
                    }
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(item.Name))
                    {
                        @Html.DisplayFor(modelItem => item.Name)
                    }
                    else
                    {
                        @:Not Available
                    }
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="3">No roles available</td>
        </tr>
    }
    </tbody>
</table>
